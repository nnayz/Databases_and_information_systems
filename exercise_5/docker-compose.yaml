# Docker Compose file version

services:
  # MongoDB service
  mongo:
    image: mongo:7.0 # Specify MongoDB version (e.g., 7.0, latest)
    restart: always
    container_name: mongo_db
    ports:
      - "27017:27017" # Host port:Container port
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password # IMPORTANT: Use Docker secrets or env files for production
    networks:
      - mongo_network
    volumes:
      - mongo_data:/data/db # Persist MongoDB data

  # Mongo Express service (web admin UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    restart: always
    container_name: mongo_express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password # Must match MONGO_INITDB_ROOT_PASSWORD
      ME_CONFIG_MONGODB_SERVER: mongo # Service name of the MongoDB container
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_USERNAME: root 
      ME_CONFIG_MONGODB_AUTH_PASSWORD: password
    depends_on:
      - mongo # Ensures mongo starts before mongo-express
    networks:
      - mongo_network

# Networks definition
networks:
  mongo_network:
    name: mongo_custom_network # Custom network name
    driver: bridge

# Volumes definition for data persistence
volumes:
  mongo_data:
    driver: local # Use local driver for the volume
